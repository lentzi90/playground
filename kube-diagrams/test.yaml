apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: test-1
  namespace: default
  labels:
    cni: calico
spec:
  clusterNetwork:
    services:
      cidrBlocks:
      - 10.96.0.0/12
    pods:
      cidrBlocks:
      - 192.168.0.0/18
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: Metal3Cluster
    name: test-1
    namespace: default
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: test-1
    namespace: default
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3Cluster
metadata:
  name: test-1
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 192.168.222.100
    port: 6443
  noCloudProvider: true
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: test-1
  namespace: default
spec:
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: Metal3MachineTemplate
      name: test-1-controlplane-plain
      namespace: default
    nodeDrainTimeout: "0s"
  replicas: 1
  rolloutStrategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  version: v1.33.0
  kubeadmConfigSpec:
    files:
    - contentFrom:
        secret:
          key: ubuntu-install-k8s-release-artifacts.sh
          name: install-k8s
      path: /tmp/install-k8s.sh
      owner: root:root
      permissions: '0755'
    preKubeadmCommands:
    - /tmp/install-k8s.sh
    joinConfiguration:
      controlPlane: {}
      nodeRegistration:
        name: '{{ ds.meta_data.name }}'
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
          rotate-server-certificates: "true"
          rotate-certificates: "true"
    initConfiguration:
      nodeRegistration:
        name: '{{ ds.meta_data.name }}'
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
          rotate-server-certificates: "true"
          rotate-certificates: "true"
          # max-pods: "500"
          # system-reserved: cpu=100m
          # reserved-cpus: "0"
          # cpu-manager-policy: static
    users:
    - name: ubuntu
      sudo: 'ALL=(ALL) NOPASSWD:ALL'
      sshAuthorizedKeys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOxg0/L9LWM8K6//pe5OYc7SK4vv6676uz6VRJGA44nl lennart
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3MachineTemplate
metadata:
  name: test-1-controlplane-plain
  namespace: default
spec:
  nodeReuse: false
  template:
    spec:
      hostSelector:
        matchLabels:
          bmh-name: bmo-e2e-0
      automatedCleaningMode: metadata
      dataTemplate:
        name: test-1-controlplane-template
      image:
        checksum: cb0ba1e5a579188fabab89a6745891ce8752aef926ffa70ec59b8570fbb7725e
        checksumType: sha256
        format: raw
        url: http://192.168.222.1/ubuntu-2404.raw
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3DataTemplate
metadata:
  name: test-1-controlplane-template
  namespace: default
spec:
  clusterName: test-1
  metaData:
    gatewaysFromIPPool:
    - apiGroup: ipam.metal3.io
      key: Gateway_For_Net_ipv4
      kind: IPPool
      name: control-plane-endpoint-test-1
    indexes:
    - key: machine_index
      step: 1
    ipAddressesFromIPPool:
    - apiGroup: ipam.metal3.io
      key: IP_For_Net_ipv4
      kind: IPPool
      name: control-plane-endpoint-test-1
    objectNames:
    - key: machine_name
      object: machine
    - key: metal3machine_name
      object: metal3machine
    - key: bmh_name
      object: baremetalhost
    prefixesFromIPPool:
    - apiGroup: ipam.metal3.io
      key: Prefix_For_Net_ipv4
      kind: IPPool
      name: control-plane-endpoint-test-1

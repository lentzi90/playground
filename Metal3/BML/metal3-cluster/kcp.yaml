apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: metal3-k8s
spec:
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: Metal3MachineTemplate
      name: metal3-k8s-controlplane-v1.34.0
      # name: metal3-k8s-controlplane-v1.33.0
    nodeDrainTimeout: "0s"
  replicas: 1
  rolloutStrategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  version: v1.34.0
  # version: v1.33.0
  kubeadmConfigSpec:
    files:
    - path: /etc/kubernetes/manifests/kube-vip.yaml
      owner: root:root
      permissions: '0644'
      content: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - manager
            env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_nodename
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: vip_interface
              value: eth0
            - name: vip_subnet
              value: "32"
            - name: dns_mode
              value: first
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: vip_leaderelection
              value: "true"
            - name: vip_leasename
              value: plndr-cp-lock
            - name: vip_leaseduration
              value: "5"
            - name: vip_renewdeadline
              value: "3"
            - name: vip_retryperiod
              value: "1"
            - name: address
              value: {{ ds.meta_data.vip }}
            - name: prometheus_server
              value: :2112
            image: ghcr.io/kube-vip/kube-vip:v1.0.0
            imagePullPolicy: IfNotPresent
            name: kube-vip
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
                drop:
                - ALL
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostAliases:
          - hostnames:
            - kubernetes
            ip: 127.0.0.1
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
            name: kubeconfig
    # - contentFrom:
    #     secret:
    #       key: ubuntu-install-k8s-release-artifacts.sh
    #       name: install-k8s
    #   path: /tmp/install-k8s.sh
    #   owner: root:root
    #   permissions: '0755'
    preKubeadmCommands:
    - echo "127.0.1.1 {{ ds.meta_data.name }}" >> /etc/hosts
    # - /tmp/install-k8s.sh
    # See https://github.com/kube-vip/kube-vip/issues/684
    - "sed -i 's#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#' /etc/kubernetes/manifests/kube-vip.yaml"
    - systemctl enable --now crio
    - systemctl enable --now kubelet
    postKubeadmCommands:
    # See https://github.com/kube-vip/kube-vip/issues/684
    - "sed -i 's#path: /etc/kubernetes/super-admin.conf#path: /etc/kubernetes/admin.conf#' /etc/kubernetes/manifests/kube-vip.yaml"
    joinConfiguration:
      controlPlane:
        localAPIEndpoint:
          advertiseAddress: '{{ ds.meta_data.internal_ip }}'
      nodeRegistration:
        name: '{{ ds.meta_data.name }}'
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
          container-runtime-endpoint: 'unix:///var/run/crio/crio.sock'
          node-ip: '{{ ds.meta_data.internal_ip }}'
    initConfiguration:
      localAPIEndpoint:
        advertiseAddress: '{{ ds.meta_data.internal_ip }}'
      nodeRegistration:
        name: '{{ ds.meta_data.name }}'
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
          container-runtime-endpoint: 'unix:///var/run/crio/crio.sock'
          node-ip: '{{ ds.meta_data.internal_ip }}'
    clusterConfiguration:
      controlPlaneEndpoint: '{{ ds.meta_data.vip }}:6443'
    users:
    - name: centos
      sudo: 'ALL=(ALL) NOPASSWD:ALL'
      sshAuthorizedKeys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOxg0/L9LWM8K6//pe5OYc7SK4vv6676uz6VRJGA44nl lennart
